# render.yaml  (place at repo root)
services:
  # --- Web App (Docker) ---
  - type: web
    name: ereceipt-app
    runtime: docker
    plan: free                # web can be free; upgrade if needed
    dockerfilePath: ./Dockerfile
    healthCheckPath: /health

    # Get Redis host:port from the private service automatically
    envVars:
      - key: Demo
        value: true

      # SQLite on a persistent disk
      - key: Storage__Mode
        value: Sql
      - key: Storage__SqlProvider
        value: Sqlite
      - key: Storage__ConnectionStrings__Sqlite
        value: Data Source=/data/app.db

      # Point to the private Redis service (host:port on Render’s private network)
      - key: Storage__Redis
        fromService:
          name: redis
          type: pserv
          property: hostport

      # Set these to your live URL AFTER the first deploy, then redeploy
      - key: Shortener__ShortBaseUrl
        value: https://REPLACE_AFTER_DEPLOY
      - key: Shortener__ViewBaseUrl
        value: https://REPLACE_AFTER_DEPLOY/view.html

      # JWT with rotation (replace secrets after first deploy)
      - key: Jwt__Issuer
        value: ereceipt
      - key: Jwt__Audience
        value: ereceipt-viewer
      - key: Jwt__ExpMinutes
        value: "10"
      - key: Jwt__SkewSeconds
        value: "120"
      - key: Jwt__ActiveKid
        value: k2
      - key: Jwt__Keys__0__Kid
        value: k1
      - key: Jwt__Keys__0__Secret
        value: CHANGE_ME_TO_LONG_RANDOM_1______________________________________
      - key: Jwt__Keys__1__Kid
        value: k2
      - key: Jwt__Keys__1__Secret
        value: CHANGE_ME_TO_LONG_RANDOM_2______________________________________

      # Rate limits
      - key: RateLimit__Otp__PerIpPerMinute
        value: "5"
      - key: RateLimit__Otp__PerJtiPerMinute
        value: "3"
      - key: RateLimit__Shorten__PerIpPerMinute
        value: "30"
      - key: RateLimit__Shorten__PerKeyPerHour
        value: "120"

    # persistent disk for SQLite DB
    disks:
      - name: data
        mountPath: /data
        sizeGB: 1

  # --- Redis as a Private Service (Docker Image) ---
  - type: pserv
    name: redis
    runtime: image
    plan: starter             # required; private services can’t use free
    image:
      url: docker.io/library/redis:7-alpine
    # enable persistence (AOF + periodic RDB)
    dockerCommand: redis-server --appendonly yes --save 60 1 --appendfsync everysec

    # persistent disk for Redis data
    disk:
      name: redisdata
      mountPath: /data
      sizeGB: 1
